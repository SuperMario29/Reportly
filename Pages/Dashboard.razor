@page "/"
@using Reportly.Models
@using Reportly.Services
@inject ShopifyService ShopifyService
@inject FacebookService FacebookService
@inject KlaviyoService KlaviyoService

<div class="dashboard-container">
    <h1>Reportly Dashboard</h1>

    <div class="row">
        <!-- Shopify Card -->
        <div class="col-md-4">
            <div class="card platform-card">
                <div class="card-header bg-primary text-white">
                    <h5>Shopify</h5>
                </div>
                <div class="card-body">
                    @if (shopifyMetrics == null)
                    {
                        <p>Loading products...</p>
                    }
                    else
                    {
                        <p>Products: @shopifyMetrics.TopProducts.Count</p>
                        <ul>
                            @foreach (var product in shopifyMetrics.TopProducts.Take(3))
                            {
                               <li>@product.Title</li>
                            }
                        </ul>
                    }
                    <a href="/shopify" class="btn btn-primary">Manage Products</a>
                </div>
            </div>
        </div>

        <!-- Facebook Card -->
        <div class="col-md-4">
            <div class="card platform-card">
                <div class="card-header bg-info text-white">
                    <h5>Facebook Metrics</h5>
                </div>
                <div class="card-body">
                    @if (fbMetrics == null)
                    {
                        <p>Loading metrics...</p>
                    }
                    else
                    {
                        <p>Active Campaigns: @fbMetrics.Count</p>
                        <ul>
                            @foreach (var camp in fbMetrics.Take(3))
                            {
                                <li>@camp.Name</li>                                
                            }
                        </ul>
                    }
                    <a href="/facebook" class="btn btn-info">Manage Campaigns</a>
                </div>
            </div>
        </div>

        <!-- Klaviyo Card -->
        <div class="col-md-4">
            <div class="card platform-card">
                <div class="card-header bg-success text-white">
                    <h5>Klaviyo</h5>
                </div>
                <div class="card-body">
                    @if (klaviyoMetrics == null)
                    {
                        <p>Loading lists...</p>
                    }
                    else
                    {
                        <p>Email Lists: @klaviyoMetrics.RecentCampaigns.Count</p>
                        <ul>
                            @foreach (var camp in klaviyoMetrics.RecentCampaigns.Take(3))
                            {
                               <li>@camp.Name</li>                               
                            }
                        </ul>
                    }
                    <a href="/klaviyo" class="btn btn-success">Manage Lists</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ShopifyMetrics shopifyMetrics;
    private List<AdCampaignPerformance> fbMetrics;
    private KlaviyoMetrics klaviyoMetrics;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            var tasks = new Task[]
            {
                Task.Run(async () => shopifyMetrics = await ShopifyService.GetStoreMetrics()),
                Task.Run(async () => fbMetrics = await FacebookService.GetCampaignsAsync()),
                Task.Run(async () => klaviyoMetrics = await KlaviyoService.GetEmailMetrics())
            };

            await Task.WhenAll(tasks);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }
}

<style>
    .platform-card {
        height: 100%;
        margin-bottom: 20px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s;
    }

    .platform-card:hover {
        transform: translateY(-5px);
    }

    .dashboard-container {
        padding: 20px;
    }
</style>